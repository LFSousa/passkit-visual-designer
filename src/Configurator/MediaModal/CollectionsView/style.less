@clips-offset: 10px;
@clips: 2;
@grid-gap: 10px;
@placeholder-color: #5c5c5c;

#collection-view {
	display: grid;
	/* grid-template-rows must be dynamic and based on (amount of elements + 1) / 3 */
	grid-template-columns: repeat(3, 1fr);
	column-gap: @grid-gap;
	row-gap: @grid-gap;
	margin: 0 20px;
/* 	overflow: scroll; */ // @TODO replace with no scrollbars

	& .collection {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;

		& .preview {
			position: relative;
			width: 130px + @clips-offset * @clips;
			height: 120px;
			cursor: pointer;

			& .clipper {
				.clipper-shifter(@clips + 1);

				position: absolute;
				width: 130px;
				height: 100px;
				overflow: hidden;
			}

			& .empty-slot {
				border: 1px dashed @placeholder-color;
				border-radius: 2px;
				display: flex;
				justify-content: center;
				align-items: center;
				width: 100%;
				height: 100%;

				& span.fade-blink {
					opacity: 1;
					animation-name: fade-blinking;
					animation-duration: 1s;
					animation-timing-function: ease-in-out;
					animation-direction: alternate-reverse;
					animation-iteration-count: infinite;
				}
			}

			@keyframes fade-blinking {
				to { opacity: 0; }
			}
		}

		& span {
			margin-top: 10px;
			min-height: 20px;
			display: flex;
			justify-content: space-between;
			align-items: center;
			align-self: normal;

			& svg {
				width: 15px;
				height: 15px;
				opacity: 0;
				transition: opacity .3s ease-in-out;
				fill: #e6e6e6;
				cursor: pointer;
			}
		}

		&:hover span svg {
			opacity: 1;
		}

		& .create-new {
			width: 130px + @clips-offset * @clips;
			height: 100%;
			min-height: 100px;
			border: 1px dashed @placeholder-color;
			border-radius: 2px;
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;

			& svg {
				width: 40px;
				height: 40px;
				fill: @placeholder-color;
			}

			& span {
				align-self: center;
			}
		}
	}
}

.clipper-shifter(@loops-amount; @counter: 0;) when (@counter <= @loops-amount) {
	@childN: @counter + 1;

	&:nth-child(@{childN}) {
		z-index: @loops-amount - @counter - 1;
		left: @clips-offset * @counter;
		bottom: @clips-offset * @counter;
	}

	.clipper-shifter(@loops-amount, @counter + 1);
}
